---
format:
  revealjs:
    theme: custom.scss
    fontsize: 1.8em
editor: visual
title-slide-attributes: 
  data-background-image: title.png
  data-background-opacity: 50%
---

![](img/title.png)

## Les ateliers codons

<br>

-   Des **cr√©neaux r√©guliers** pour **d√©couvrir** et **progresser**

-   Deux parcours : **initiation** et **perfectionnement**

-   Une **√©quipe d'animation**

-   Des **supports** disponibles en ligne : [ateliers-codons.netlify.app/](https://ateliers-codons.netlify.app/)

<br>

#### Sources pour cet atelier :

<br>

-   [Happy Git with R](https://happygitwithr.com/)

-   [Pro Git](https://git-scm.com/book/fr/v2)

# Gestionnaire de version

## Gestionnaire de version

<br>

> Un gestionnaire de version est un syst√®me qui **enregistre l'√©volution d'un fichier ou d'un ensemble de fichiers au cours du temps** de mani√®re √† ce qu'on puisse **rappeler une version ant√©rieure** d'un fichier √† tout moment.
>
> *Pro Git*

## Syst√®me de gestion de version

<br>

Un **syst√®me de gestion de version (VCS)** permet de :

<br>

-   ramener un fichier √† un √©tat pr√©c√©dent

-   ramener le projet complet √† un √©tat pr√©c√©dent

-   visualiser les changements au cours du temps

-   voir qui a modifi√© quelquechose qui pourrait poser un probl√®me

-   voir qui a introduit un probl√®me et quand

-   ...

## Les diff√©rents types de VCS

<br>

#### VCS local

<br>

::: columns
::: {.column width="40%"}
![](img/local_vcs.png)
:::

::: {.column width="60%"}
-   Diff√©rences stock√©es sous forme de patches

-   Ex : RCS

üëçRestitution possible d'un √©tat ant√©rieur

üëéLocal uniquement
:::
:::

## Les diff√©rents types de VCS

<br>

#### VCS centralis√©

<br>

::: columns
::: {.column width="40%"}
![](img/centralised_vcs.png)
:::

::: {.column width="60%"}
-   Un serveur central contient tous les fichiers

-   Ex : CSV, Subversion, Perforce

üëçCollaboration

üëéUn seul lieu de stockage
:::
:::

## Les diff√©rents types de VCS

<br>

#### VCS distribu√©

<br>

::: columns
::: {.column width="40%"}
![](img/distributed_vcs.png)
:::

::: {.column width="60%"}
-   Le d√©p√¥t est dupliqu√©

-   Ex : Git, Mercurial, Darcs

üëçCollaboration + copies multiples
:::
:::

## Une br√®ve histoire de Git

<br>

|      |                                                                                         |
|------|-----------------------------------------------------------------------------------------|
| 1991 | Modifications du noyau Linux transmises sous forme de patches et d'archives de fichiers |
| 2002 | Utilisation d'un VCS distribu√© propri√©taire, BitKeeper                                  |
| 2005 | Fin de la gratuit√© de BitKeeper et d√©veloppement de Git                                 |

## Objectifs de Git

<br>

-   **vitesse**

-   conception **simple**

-   support pour les **d√©veloppements non lin√©aires** (milliers de branches parall√®les)

-   gestion efficace des **projets d'envergure** tels que le noyau Linux

# Git
